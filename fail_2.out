      fixed_acidity  volatile_acidity  citric_acid  ...    pH  sulphates  alcohol
0               7.4             0.700         0.00  ...  3.51       0.56      9.4
1               7.8             0.880         0.00  ...  3.20       0.68      9.8
2               7.8             0.760         0.04  ...  3.26       0.65      9.8
3              11.2             0.280         0.56  ...  3.16       0.58      9.8
4               7.4             0.700         0.00  ...  3.51       0.56      9.4
...             ...               ...          ...  ...   ...        ...      ...
1594            6.2             0.600         0.08  ...  3.45       0.58     10.5
1595            5.9             0.550         0.10  ...  3.52       0.76     11.2
1596            6.3             0.510         0.13  ...  3.42       0.75     11.0
1597            5.9             0.645         0.12  ...  3.57       0.71     10.2
1598            6.0             0.310         0.47  ...  3.39       0.66     11.0

[1599 rows x 11 columns]
      fixed_acidity  volatile_acidity  citric_acid  ...    pH  sulphates  alcohol
0               7.4             0.700         0.00  ...  3.51       0.56      9.4
1               7.8             0.880         0.00  ...  3.20       0.68      9.8
2               7.8             0.760         0.04  ...  3.26       0.65      9.8
3              11.2             0.280         0.56  ...  3.16       0.58      9.8
4               7.4             0.700         0.00  ...  3.51       0.56      9.4
...             ...               ...          ...  ...   ...        ...      ...
1594            6.2             0.600         0.08  ...  3.45       0.58     10.5
1595            5.9             0.550         0.10  ...  3.52       0.76     11.2
1596            6.3             0.510         0.13  ...  3.42       0.75     11.0
1597            5.9             0.645         0.12  ...  3.57       0.71     10.2
1598            6.0             0.310         0.47  ...  3.39       0.66     11.0

[1599 rows x 11 columns]
['5' '5' '5' '5' '6' '5' '5' '5' '6' '6' '7' '5' '6' '5' '5' '7' '5' '6'
 '7' '5' '5' '6' '5' '6' '5' '6' '6' '5' '5' '6' '5' '5' '6' '6' '5' '5'
 '6' '6' '6' '6' '5' '5' '6' '5' '6' '6' '6' '6' '5' '6' '5' '5' '6' '7'
 '5' '5' '6' '6' '6' '5' '6' '6' '6' '5' '7' '5' '7' '6' '7' '5' '6' '5'
 '6' '6' '6' '5' '7' '5' '6' '7' '5' '7' '5' '6' '6' '6' '5' '6' '6' '6'
 '6' '5' '6' '5' '5' '5' '5' '6' '5' '6' '5' '5' '6' '7' '6' '7' '6' '5'
 '6' '5' '7' '5' '7' '5' '6' '6' '6' '5' '5' '6' '6' '6' '6' '5' '6' '5'
 '7' '5' '5' '6' '6' '5' '5' '6' '6' '5' '5' '5' '5' '6' '7' '6' '7' '6'
 '6' '5' '6' '6' '6' '5' '6' '6' '5' '5' '6' '5' '5' '6' '5' '6' '6' '6'
 '6' '5' '5' '6' '6' '5' '5' '5' '5' '5' '7' '5' '7' '6' '6' '5' '5' '5'
 '5' '5' '5' '6' '5' '7' '6' '6' '7' '5' '6' '6' '5' '6' '6' '5' '5' '6'
 '5' '7' '5' '5' '5' '5' '7' '6' '5' '6' '6' '7' '8' '5' '5' '6' '6' '6'
 '6' '5' '6' '6' '6' '6' '6' '6' '6' '5' '5' '7' '5' '5' '5' '5' '7' '6'
 '5' '7' '5' '6' '6' '5' '5' '5' '6' '7' '6' '7' '6' '6' '6' '5' '6' '6'
 '6' '6' '6' '5' '5' '6' '6' '6' '6' '6' '5' '6' '6' '6' '6' '5' '6' '6'
 '5' '6' '5' '6' '6' '5' '6' '6' '6' '6' '7' '5' '5' '5' '5' '7' '5' '6'
 '5' '6' '5' '6' '6' '5' '5' '6' '5' '7' '6' '6' '5' '5' '6' '6' '6' '5'
 '6' '6' '6' '7' '6' '5' '6' '6' '6' '6' '5' '5' '6' '5' '6' '6' '6' '5'
 '5' '5' '6' '6' '5' '6' '6' '7' '5' '6' '6' '5' '6' '6' '5' '5' '6' '6'
 '6' '6' '6' '5' '6' '5' '6' '6' '6' '6' '5' '6' '6' '6' '5' '5' '6' '5'
 '6' '5' '5' '6' '5' '6' '6' '5' '5' '5' '5' '5' '6' '6' '5' '6' '6' '7'
 '5' '6' '5' '6' '7' '6' '7' '7' '7' '5' '5' '6' '5' '5' '5' '6' '6' '6'
 '6' '5' '5' '6']
RF Accuracy 0.67
['5' '5' '6' '5' '6' '5' '5' '5' '6' '6' '7' '6' '6' '5' '5' '8' '5' '6'
 '7' '5' '5' '5' '5' '6' '6' '6' '7' '5' '5' '6' '5' '6' '6' '6' '5' '5'
 '6' '6' '6' '6' '5' '5' '7' '5' '6' '6' '7' '6' '5' '6' '5' '5' '6' '7'
 '5' '5' '6' '6' '6' '5' '5' '6' '6' '5' '7' '5' '7' '6' '6' '5' '6' '5'
 '6' '6' '6' '5' '7' '5' '6' '7' '5' '7' '5' '5' '6' '6' '5' '6' '7' '6'
 '6' '5' '6' '5' '5' '5' '5' '6' '5' '6' '5' '5' '6' '7' '6' '6' '6' '5'
 '6' '5' '6' '5' '7' '5' '5' '6' '6' '5' '5' '6' '6' '6' '6' '5' '6' '5'
 '6' '5' '5' '6' '6' '5' '5' '7' '6' '5' '5' '5' '5' '6' '7' '6' '7' '6'
 '6' '5' '6' '6' '6' '5' '6' '6' '5' '5' '6' '5' '6' '6' '5' '6' '6' '5'
 '6' '5' '5' '6' '5' '5' '5' '5' '5' '5' '7' '5' '7' '6' '6' '5' '5' '5'
 '5' '6' '5' '8' '5' '6' '6' '6' '7' '5' '6' '6' '5' '7' '6' '5' '5' '6'
 '5' '6' '5' '5' '5' '5' '7' '6' '5' '5' '6' '6' '8' '5' '5' '6' '7' '6'
 '6' '5' '6' '5' '5' '6' '6' '6' '6' '5' '5' '7' '5' '6' '5' '5' '7' '6'
 '5' '6' '5' '6' '6' '5' '6' '5' '6' '7' '6' '7' '6' '6' '7' '5' '6' '5'
 '5' '6' '6' '5' '6' '6' '6' '6' '7' '6' '5' '7' '6' '6' '5' '5' '6' '6'
 '5' '6' '5' '6' '6' '5' '6' '5' '6' '6' '7' '5' '5' '5' '5' '6' '5' '6'
 '5' '6' '5' '6' '6' '5' '5' '6' '5' '7' '6' '6' '5' '5' '6' '5' '5' '5'
 '6' '6' '6' '7' '6' '5' '6' '6' '6' '6' '5' '5' '6' '5' '6' '6' '6' '5'
 '5' '5' '6' '6' '5' '6' '6' '7' '5' '6' '6' '5' '6' '6' '5' '5' '6' '7'
 '6' '5' '6' '5' '6' '5' '6' '6' '6' '6' '5' '5' '6' '6' '5' '5' '6' '5'
 '6' '5' '5' '6' '5' '6' '6' '5' '5' '5' '5' '5' '6' '6' '6' '6' '6' '6'
 '6' '6' '5' '6' '7' '5' '7' '7' '6' '5' '5' '6' '5' '5' '5' '6' '6' '6'
 '6' '5' '5' '6']
AutoML Accuracy 0.6425
          rank  ensemble_weight           type      cost  duration
model_id                                                          
2            1             0.04  random_forest  0.308081  3.152284
31           2             0.06  random_forest  0.308081  3.083070
33           3             0.02  random_forest  0.315657  3.068086
47           4             0.48       adaboost  0.351010  3.670151
49           5             0.02            lda  0.419192  1.368322
19           6             0.04       adaboost  0.424242  2.828500
21           7             0.06            qda  0.540404  1.152546
35           8             0.10       adaboost  0.545455  2.832493
45           9             0.08  liblinear_svc  0.560606  1.579778
41          10             0.02            sgd  0.643939  1.747212
43          11             0.04    extra_trees  0.651515  2.369055
48          12             0.04            sgd  0.734848  1.478049
{2: {'model_id': 2, 'rank': 1, 'cost': 0.30808080808080807, 'ensemble_weight': 0.04, 'data_preprocessor': <autosklearn.pipeline.components.data_preprocessing.DataPreprocessorChoice object at 0x14771e164e50>, 'balancing': Balancing(random_state=1), 'feature_preprocessor': <autosklearn.pipeline.components.feature_preprocessing.FeaturePreprocessorChoice object at 0x14771e11fa90>, 'classifier': <autosklearn.pipeline.components.classification.ClassifierChoice object at 0x14771e11f850>, 'sklearn_classifier': RandomForestClassifier(max_features=3, n_estimators=512, n_jobs=1,
                       random_state=1, warm_start=True)}, 19: {'model_id': 19, 'rank': 2, 'cost': 0.4242424242424242, 'ensemble_weight': 0.04, 'data_preprocessor': <autosklearn.pipeline.components.data_preprocessing.DataPreprocessorChoice object at 0x14771e149b90>, 'balancing': Balancing(random_state=1), 'feature_preprocessor': <autosklearn.pipeline.components.feature_preprocessing.FeaturePreprocessorChoice object at 0x14771e188950>, 'classifier': <autosklearn.pipeline.components.classification.ClassifierChoice object at 0x14771e188ed0>, 'sklearn_classifier': AdaBoostClassifier(base_estimator=DecisionTreeClassifier(max_depth=1),
                   learning_rate=0.03743735372990651, n_estimators=475,
                   random_state=1)}, 21: {'model_id': 21, 'rank': 3, 'cost': 0.5404040404040404, 'ensemble_weight': 0.06, 'data_preprocessor': <autosklearn.pipeline.components.data_preprocessing.DataPreprocessorChoice object at 0x14771de53cd0>, 'balancing': Balancing(random_state=1), 'feature_preprocessor': <autosklearn.pipeline.components.feature_preprocessing.FeaturePreprocessorChoice object at 0x14771e005090>, 'classifier': <autosklearn.pipeline.components.classification.ClassifierChoice object at 0x14771e0051d0>, 'sklearn_classifier': QuadraticDiscriminantAnalysis(reg_param=0.6019930535728735)}, 31: {'model_id': 31, 'rank': 4, 'cost': 0.30808080808080807, 'ensemble_weight': 0.06, 'data_preprocessor': <autosklearn.pipeline.components.data_preprocessing.DataPreprocessorChoice object at 0x14771e0352d0>, 'balancing': Balancing(random_state=1), 'feature_preprocessor': <autosklearn.pipeline.components.feature_preprocessing.FeaturePreprocessorChoice object at 0x14771e293210>, 'classifier': <autosklearn.pipeline.components.classification.ClassifierChoice object at 0x14771e293fd0>, 'sklearn_classifier': RandomForestClassifier(bootstrap=False, criterion='entropy', max_features=1,
                       min_samples_split=13, n_estimators=512, n_jobs=1,
                       random_state=1, warm_start=True)}, 33: {'model_id': 33, 'rank': 5, 'cost': 0.31565656565656564, 'ensemble_weight': 0.02, 'data_preprocessor': <autosklearn.pipeline.components.data_preprocessing.DataPreprocessorChoice object at 0x14771df05510>, 'balancing': Balancing(random_state=1, strategy='weighting'), 'feature_preprocessor': <autosklearn.pipeline.components.feature_preprocessing.FeaturePreprocessorChoice object at 0x14771e025f50>, 'classifier': <autosklearn.pipeline.components.classification.ClassifierChoice object at 0x14771e0253d0>, 'sklearn_classifier': RandomForestClassifier(max_features=1, min_samples_split=4, n_estimators=512,
                       n_jobs=1, random_state=1, warm_start=True)}, 35: {'model_id': 35, 'rank': 6, 'cost': 0.5454545454545454, 'ensemble_weight': 0.1, 'data_preprocessor': <autosklearn.pipeline.components.data_preprocessing.DataPreprocessorChoice object at 0x14771e293810>, 'balancing': Balancing(random_state=1), 'feature_preprocessor': <autosklearn.pipeline.components.feature_preprocessing.FeaturePreprocessorChoice object at 0x14771da451d0>, 'classifier': <autosklearn.pipeline.components.classification.ClassifierChoice object at 0x14771da05490>, 'sklearn_classifier': AdaBoostClassifier(base_estimator=DecisionTreeClassifier(max_depth=2),
                   learning_rate=0.30347571933240297, n_estimators=384,
                   random_state=1)}, 41: {'model_id': 41, 'rank': 7, 'cost': 0.6439393939393939, 'ensemble_weight': 0.02, 'data_preprocessor': <autosklearn.pipeline.components.data_preprocessing.DataPreprocessorChoice object at 0x14771e01c0d0>, 'balancing': Balancing(random_state=1, strategy='weighting'), 'feature_preprocessor': <autosklearn.pipeline.components.feature_preprocessing.FeaturePreprocessorChoice object at 0x14771da2db10>, 'classifier': <autosklearn.pipeline.components.classification.ClassifierChoice object at 0x14771da2df10>, 'sklearn_classifier': SGDClassifier(alpha=1.7246374268884279e-06, eta0=2.93235267931378e-06,
              l1_ratio=8.319774373974967e-06, learning_rate='constant',
              loss='squared_hinge', max_iter=128, penalty='elasticnet',
              random_state=1, tol=0.0013756651924695265, warm_start=True)}, 43: {'model_id': 43, 'rank': 8, 'cost': 0.6515151515151515, 'ensemble_weight': 0.04, 'data_preprocessor': <autosklearn.pipeline.components.data_preprocessing.DataPreprocessorChoice object at 0x14771dec0310>, 'balancing': Balancing(random_state=1, strategy='weighting'), 'feature_preprocessor': <autosklearn.pipeline.components.feature_preprocessing.FeaturePreprocessorChoice object at 0x14771e066110>, 'classifier': <autosklearn.pipeline.components.classification.ClassifierChoice object at 0x14771e073d90>, 'sklearn_classifier': ExtraTreesClassifier(criterion='entropy', max_features=1, min_samples_leaf=19,
                     min_samples_split=20, n_estimators=512, n_jobs=1,
                     random_state=1, warm_start=True)}, 45: {'model_id': 45, 'rank': 9, 'cost': 0.5606060606060606, 'ensemble_weight': 0.08, 'data_preprocessor': <autosklearn.pipeline.components.data_preprocessing.DataPreprocessorChoice object at 0x14771dd14b10>, 'balancing': Balancing(random_state=1, strategy='weighting'), 'feature_preprocessor': <autosklearn.pipeline.components.feature_preprocessing.FeaturePreprocessorChoice object at 0x14771de870d0>, 'classifier': <autosklearn.pipeline.components.classification.ClassifierChoice object at 0x14771dab38d0>, 'sklearn_classifier': LinearSVC(C=19.173503333379397, class_weight='balanced', dual=False,
          intercept_scaling=1.0, random_state=1, tol=0.0018375704754392491)}, 47: {'model_id': 47, 'rank': 10, 'cost': 0.351010101010101, 'ensemble_weight': 0.48, 'data_preprocessor': <autosklearn.pipeline.components.data_preprocessing.DataPreprocessorChoice object at 0x14771e05cd10>, 'balancing': Balancing(random_state=1), 'feature_preprocessor': <autosklearn.pipeline.components.feature_preprocessing.FeaturePreprocessorChoice object at 0x14771da76e50>, 'classifier': <autosklearn.pipeline.components.classification.ClassifierChoice object at 0x14771da7d450>, 'sklearn_classifier': AdaBoostClassifier(algorithm='SAMME',
                   base_estimator=DecisionTreeClassifier(max_depth=9),
                   learning_rate=0.24202129517815787, n_estimators=238,
                   random_state=1)}, 48: {'model_id': 48, 'rank': 11, 'cost': 0.7348484848484849, 'ensemble_weight': 0.04, 'data_preprocessor': <autosklearn.pipeline.components.data_preprocessing.DataPreprocessorChoice object at 0x14771da600d0>, 'balancing': Balancing(random_state=1, strategy='weighting'), 'feature_preprocessor': <autosklearn.pipeline.components.feature_preprocessing.FeaturePreprocessorChoice object at 0x14771d5f7cd0>, 'classifier': <autosklearn.pipeline.components.classification.ClassifierChoice object at 0x14771d5f7f50>, 'sklearn_classifier': SGDClassifier(alpha=0.00016484645761748854, average=True,
              eta0=0.0008755581010227592, learning_rate='constant', max_iter=64,
              random_state=1, tol=0.0002229384086064582, warm_start=True)}, 49: {'model_id': 49, 'rank': 12, 'cost': 0.4191919191919192, 'ensemble_weight': 0.02, 'data_preprocessor': <autosklearn.pipeline.components.data_preprocessing.DataPreprocessorChoice object at 0x14771da0e190>, 'balancing': Balancing(random_state=1), 'feature_preprocessor': <autosklearn.pipeline.components.feature_preprocessing.FeaturePreprocessorChoice object at 0x14771c7acb10>, 'classifier': <autosklearn.pipeline.components.classification.ClassifierChoice object at 0x14771c7aced0>, 'sklearn_classifier': LinearDiscriminantAnalysis(shrinkage='auto', solver='lsqr',
                           tol=0.03090456264131834)}}
